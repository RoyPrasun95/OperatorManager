/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package operatorPackage;
import java.awt.event.KeyEvent;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import java.awt.Graphics;
import java.awt.Image;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
/**
 *
 * @author prasu
 */

public class View1 extends javax.swing.JInternalFrame {

    /**
     * Creates new form Customer
     */String url="jdbc:mysql://localhost:3306/operator";
            String un="root";
            String pass="Password@123";
    public View1() {
         initComponents();
       branch();
         jComboBox1.setSelectedIndex(-1);
        Connection con;
    
       
        try { txtCount.setText("");
            jTableClient.setModel(new DefaultTableModel(null,new String[]{"CUSTOMER ID","CUST_NAME","CUST_IP","CUST_ADDRESS","CUST_CONTACT","RECHARGE DATE","AMOUNT","OPERATOR NAME"}));
            
            Class.forName("com.mysql.jdbc.Driver");
            con=DriverManager.getConnection(url,un,pass);
            
                  Statement st1=con.createStatement();
                  Statement st2=con.createStatement();
                  Statement st3=con.createStatement();
                  String query1="select client_id,client_name,client_ip,client_address,cust_contactno,recharge_date,"
                          + "amount,operator_name from (select * from client cl left outer join "
                          + "(select cust.cust_name,cust.cust_ip,cust.cust_contactno,op.operator_name from "
                          + "customer as cust join operator op on cust.operator_id=op.operator_id) cu on "
                          + "cl.client_ip=cu.cust_ip) res;";
                  
                    String query2="select sum(amount) from (select * from client cl left outer join "
                            + "(select cust.cust_name,cust.cust_ip,cust.cust_contactno,op.operator_name "
                            + "from customer as cust join operator op on cust.operator_id=op.operator_id) "
                            + "cu on cl.client_ip=cu.cust_ip) res ;";
                  String query3="select count(*) from (select * from client cl left outer join "
                          + "(select cust.cust_name,cust.cust_ip,cust.cust_contactno,op.operator_name "
                          + "from customer as cust join operator op on cust.operator_id=op.operator_id) cu "
                          + "on cl.client_ip=cu.cust_ip) res ;";
                  //System.out.print(query1);

       ResultSet rs1=st1.executeQuery(query1);
         ResultSet rs2=st2.executeQuery(query2);
          ResultSet rs3=st3.executeQuery(query3);
         
         rs2.next();
         rs3.next();
         txtSum.setText(rs2.getString(1));
         txtCount.setText(rs3.getString(1));

        DefaultTableModel model=(DefaultTableModel)jTableClient.getModel();
        while(rs1.next())
        {model.addRow(new String[]{rs1.getString(1),rs1.getString(2).toUpperCase(),rs1.getString(3),rs1.getString(4),rs1.getString(5), rs1.getString(6),rs1.getString(7),rs1.getString(8)});         
        //System.out.println(rs1.getString(2));
        }
        
        }       
        
        catch (ClassNotFoundException ex) {
            Logger.getLogger(View1.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(View1.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
            
            
                

    public void autoId ()
    {
        
        
        
    }
    
    public void branch()
    {Connection con;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con=DriverManager.getConnection(url,un,pass);
            Statement st=con.createStatement();
        
        ResultSet rs=st.executeQuery("select operator_name from operator;");
        
        jComboBox1.removeAllItems();
        while(rs.next())
        {jComboBox1.addItem(rs.getString(1));
       
        }
            
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(NewUser.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(NewUser.class.getName()).log(Level.SEVERE, null, ex);
        }
            
           
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        txtCount = new javax.swing.JTextField();
        txtSum = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableClient = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtAmount = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtCust = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 102, 153));
        setClosable(true);
        setForeground(new java.awt.Color(255, 123, 162));
        setIconifiable(true);
        setRequestFocusEnabled(false);

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));
        jPanel1.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        jPanel1.setPreferredSize(new java.awt.Dimension(1366, 678));

        txtCount.setBackground(new java.awt.Color(255, 255, 255));
        txtCount.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        txtCount.setForeground(new java.awt.Color(0, 0, 0));
        txtCount.setText("jTextField1");
        txtCount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCountActionPerformed(evt);
            }
        });

        txtSum.setBackground(new java.awt.Color(255, 255, 255));
        txtSum.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        txtSum.setForeground(new java.awt.Color(0, 0, 0));
        txtSum.setText("jTextField1");
        txtSum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSumActionPerformed(evt);
            }
        });

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("INVOICE AMOUNT");

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("COUNT");

        jScrollPane1.setPreferredSize(new java.awt.Dimension(1066, 678));

        jTableClient.setAutoCreateRowSorter(true);
        jTableClient.setBackground(new java.awt.Color(0, 102, 153));
        jTableClient.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jTableClient.setForeground(new java.awt.Color(255, 255, 255));
        jTableClient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CUSTOMER ID", "CUST NAME", "CUST IP", "CUST ADDRESS", "CUST CONTACT", "RECHARGE DATE", "AMOUNT", "OPERATOR NAME"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableClient.setColumnSelectionAllowed(true);
        jTableClient.setGridColor(new java.awt.Color(0, 0, 0));
        jTableClient.setRowSelectionAllowed(false);
        jTableClient.setShowGrid(true);
        jScrollPane1.setViewportView(jTableClient);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1104, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtSum, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(136, 136, 136)
                        .addComponent(jLabel6)
                        .addGap(1, 1, 1)
                        .addComponent(txtCount, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSum, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCount, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addContainerGap())
        );

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setText("Alliance Broadband Invoice Table");

        txtAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAmountKeyPressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel2.setText("Operator Name");

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel3.setText("Recharge Amount");

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel4.setText("Customer Name");

        txtCust.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCustKeyPressed(evt);
            }
        });

        jComboBox1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox1KeyPressed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(255, 0, 51));
        jButton3.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jButton3.setText("FILTER");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jButton3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton3KeyPressed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(0, 0, 204));
        jButton1.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Reset");
        jButton1.setPreferredSize(new java.awt.Dimension(40, 80));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(370, 370, 370)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1128, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(98, 98, 98)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(388, 388, 388)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCust, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtCust, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        Connection con;
        String name="";
       if(jComboBox1.getSelectedIndex() != -1)
       {name=jComboBox1.getSelectedItem().toString();
       }
       
    
        String amount= txtAmount.getText();
        String cust_name=txtCust.getText().toUpperCase();
       
        try {
            jTableClient.setModel(new DefaultTableModel(null,new String[]{"CUSTOMER ID","CUST_NAME","CUST_IP","CUST_ADDRESS","CUST_CONTACT","RECHARGE DATE","AMOUNT","OPERATOR NAME "}));
            
            Class.forName("com.mysql.jdbc.Driver");
            con=DriverManager.getConnection(url,un,pass);
            
                  Statement st1=con.createStatement();
                    Statement st2=con.createStatement();
                    Statement st3=con.createStatement();
                  String query1="select client_id,client_name,client_ip,client_address,cust_contactno,"
                          + "recharge_date,amount,operator_name from (select * from client cl left outer join"
                          + " (select cust.cust_name,cust.cust_ip,cust.cust_contactno,op.operator_name from customer "
                          + "as cust join operator op on cust.operator_id=op.operator_id) cu on cl.client_ip=cu.cust_ip) res";
                  
                    String query2="select sum(amount) from (select * from client cl left outer join "
                            + "(select cust.cust_name,cust.cust_ip,cust.cust_contactno,op.operator_name "
                            + "from customer as cust join operator op on cust.operator_id=op.operator_id) "
                            + "cu on cl.client_ip=cu.cust_ip) res ";
                  String query3="select count(*) from (select * from client cl left outer join "
                          + "(select cust.cust_name,cust.cust_ip,cust.cust_contactno,op.operator_name "
                          + "from customer as cust join operator op on cust.operator_id=op.operator_id) cu "
                          + "on cl.client_ip=cu.cust_ip) res ";
                          
                  
                  if(name.length()!=0)
                  {
                      
                      query1=query1+" WHERE operator_name='"+name+"'";
                     query2=query2+"WHERE operator_name='"+name+"'";
                     query3=query3+"WHERE operator_name='"+name+"'";


                  }
                  if(amount.length()!= 0)
                  { if(name.length()==0)
                  { query1=query1+" WHERE amount='"+amount+"'";
                     query2=query2+"WHERE amount='"+amount+"'";
                     query3=query3+"WHERE amount='"+amount+"'";
                  }
                  else
                  { query1=query1+" AND amount='"+amount+"'";
                    query2=query2+"AND amount='"+amount+"'";
                    query3=query3+"AND amount='"+amount+"'";
                  }
                 
                  }
                  if(cust_name.length()!=0)
                  { cust_name="%"+cust_name+"%";
                      if(name.length()==0 && amount.length()==0)
                      {query1=query1+" WHERE client_name like'"+cust_name+"'";
                      query2=query2+"WHERE client_name like'"+cust_name+"'";
                      query3=query3+"WHERE client_name like'"+cust_name+"'";
                      }
                      
                      else
                  {query1=query1+" AND client_name like'"+cust_name+"'";
                  query2=query2+"AND client_name like'"+cust_name+"'";
                  query3=query3+"AND client_name like'"+cust_name+"'";
                  }
                  }
                  
                  query1=query1+";";
                  query2=query2+";";
                  query3=query3+";";
                  //System.out.print(query3);
        
        ResultSet rs1=st1.executeQuery(query1);
         ResultSet rs2=st2.executeQuery(query2);
          ResultSet rs3=st3.executeQuery(query3);
         rs2.next();
         rs3.next();
         txtSum.setText(rs2.getString(1));
         txtCount.setText(rs3.getString(1));

        DefaultTableModel model=(DefaultTableModel)jTableClient.getModel();
        while(rs1.next())
        {model.addRow(new String[]{rs1.getString(1),rs1.getString(2).toUpperCase(),rs1.getString(3),rs1.getString(4),rs1.getString(5), rs1.getString(6),rs1.getString(7),rs1.getString(8)});         
        }
        
        }     
        
        catch (ClassNotFoundException ex) {
            Logger.getLogger(View1.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(View1.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
       jComboBox1.setSelectedIndex(-1);
       
        
        Connection con;
        try { txtCount.setText("");
            jTableClient.setModel(new DefaultTableModel(null,new String[]{"CUSTOMER ID","CUST_NAME","CUST_IP","CUST_ADDRESS","CUST_CONTACT","RECHARGE DATE","AMOUNT","OPERATOR NAME"}));
            
            Class.forName("com.mysql.jdbc.Driver");
            con=DriverManager.getConnection(url,un,pass);
            
                  Statement st1=con.createStatement();
                  Statement st2=con.createStatement();
                  Statement st3=con.createStatement();
                 String query1="select client_id,client_name,client_ip,client_address,cust_contactno,"
                          + "recharge_date,amount,operator_name from (select * from client cl left outer join"
                          + " (select cust.cust_name,cust.cust_ip,cust.cust_contactno,op.operator_name from customer "
                          + "as cust join operator op on cust.operator_id=op.operator_id) cu on cl.client_ip=cu.cust_ip) res";
                  
                    String query2="select sum(amount) from (select * from client cl left outer join "
                            + "(select cust.cust_name,cust.cust_ip,cust.cust_contactno,op.operator_name "
                            + "from customer as cust join operator op on cust.operator_id=op.operator_id) "
                            + "cu on cl.client_ip=cu.cust_ip) res ;";
                  String query3="select count(*) from (select * from client cl left outer join "
                          + "(select cust.cust_name,cust.cust_ip,cust.cust_contactno,op.operator_name "
                          + "from customer as cust join operator op on cust.operator_id=op.operator_id) cu "
                          + "on cl.client_ip=cu.cust_ip) res ;";

       ResultSet rs1=st1.executeQuery(query1);
         ResultSet rs2=st2.executeQuery(query2);
          ResultSet rs3=st3.executeQuery(query3);
       
         rs2.next();
         rs3.next();
         txtSum.setText(rs2.getString(1));
         txtCount.setText(rs3.getString(1));

        DefaultTableModel model=(DefaultTableModel)jTableClient.getModel();
        while(rs1.next())
        {model.addRow(new String[]{rs1.getString(1),rs1.getString(2).toUpperCase(),rs1.getString(3),rs1.getString(4),rs1.getString(5), rs1.getString(6),rs1.getString(7),rs1.getString(8)});         
        }
        
        }       
        
        catch (ClassNotFoundException ex) {
            Logger.getLogger(View1.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(View1.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    
       
       
        
        
           
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtCountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCountActionPerformed

    private void txtSumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSumActionPerformed

    private void jButton3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton3KeyPressed
        // TODO add your handling code here:
        
         
    }//GEN-LAST:event_jButton3KeyPressed

    private void jComboBox1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox1KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        { Connection con;
        String name="";
       if(jComboBox1.getSelectedIndex() != -1)
       {name=jComboBox1.getSelectedItem().toString();
       }
       
    
        String amount= txtAmount.getText();
        String cust_name=txtCust.getText().toUpperCase();
       
        try {
            jTableClient.setModel(new DefaultTableModel(null,new String[]{"CUSTOMER ID","CUST_NAME","CUST_IP","CUST_ADDRESS","CUST_CONTACT","RECHARGE DATE","AMOUNT","OPERATOR NAME "}));
            
            Class.forName("com.mysql.jdbc.Driver");
            con=DriverManager.getConnection(url,un,pass);
            
                  Statement st1=con.createStatement();
                    Statement st2=con.createStatement();
                    Statement st3=con.createStatement();
                  String query1="select client_id,client_name,client_ip,client_address,cust_contactno,"
                          + "recharge_date,amount,operator_name from (select * from client cl left outer join"
                          + " (select cust.cust_name,cust.cust_ip,cust.cust_contactno,op.operator_name from customer "
                          + "as cust join operator op on cust.operator_id=op.operator_id) cu on cl.client_ip=cu.cust_ip) res";
                  
                    String query2="select sum(amount) from (select * from client cl left outer join "
                            + "(select cust.cust_name,cust.cust_ip,cust.cust_contactno,op.operator_name "
                            + "from customer as cust join operator op on cust.operator_id=op.operator_id) "
                            + "cu on cl.client_ip=cu.cust_ip) res ";
                  String query3="select count(*) from (select * from client cl left outer join "
                          + "(select cust.cust_name,cust.cust_ip,cust.cust_contactno,op.operator_name "
                          + "from customer as cust join operator op on cust.operator_id=op.operator_id) cu "
                          + "on cl.client_ip=cu.cust_ip) res ";
                          
                  
                  if(name.length()!=0)
                  {
                      
                      query1=query1+" WHERE operator_name='"+name+"'";
                     query2=query2+"WHERE operator_name='"+name+"'";
                     query3=query3+"WHERE operator_name='"+name+"'";


                  }
                  if(amount.length()!= 0)
                  { if(name.length()==0)
                  { query1=query1+" WHERE amount='"+amount+"'";
                     query2=query2+"WHERE amount='"+amount+"'";
                     query3=query3+"WHERE amount='"+amount+"'";
                  }
                  else
                  { query1=query1+" AND amount='"+amount+"'";
                    query2=query2+"AND amount='"+amount+"'";
                    query3=query3+"AND amount='"+amount+"'";
                  }
                 
                  }
                  if(cust_name.length()!=0)
                  { cust_name="%"+cust_name+"%";
                      if(name.length()==0 && amount.length()==0)
                      {query1=query1+" WHERE client_name like'"+cust_name+"'";
                      query2=query2+"WHERE client_name like'"+cust_name+"'";
                      query3=query3+"WHERE client_name like'"+cust_name+"'";
                      }
                      
                      else
                  {query1=query1+" AND client_name like'"+cust_name+"'";
                  query2=query2+"AND client_name like'"+cust_name+"'";
                  query3=query3+"AND client_name like'"+cust_name+"'";
                  }
                  }
                  
                  query1=query1+";";
                  query2=query2+";";
                  query3=query3+";";
                  //System.out.print(query3);
        
        ResultSet rs1=st1.executeQuery(query1);
         ResultSet rs2=st2.executeQuery(query2);
          ResultSet rs3=st3.executeQuery(query3);
         rs2.next();
         rs3.next();
         txtSum.setText(rs2.getString(1));
         txtCount.setText(rs3.getString(1));

        DefaultTableModel model=(DefaultTableModel)jTableClient.getModel();
        while(rs1.next())
        {model.addRow(new String[]{rs1.getString(1),rs1.getString(2).toUpperCase(),rs1.getString(3),rs1.getString(4),rs1.getString(5), rs1.getString(6),rs1.getString(7),rs1.getString(8)});         
        }
        
        }     
        
        catch (ClassNotFoundException ex) {
            Logger.getLogger(View1.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(View1.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
       
            
        }
    }//GEN-LAST:event_jComboBox1KeyPressed

    private void txtAmountKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAmountKeyPressed
        // TODO add your handling code here:
        
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        { Connection con;
        String name="";
       if(jComboBox1.getSelectedIndex() != -1)
       {name=jComboBox1.getSelectedItem().toString();
       }
       
    
        String amount= txtAmount.getText();
        String cust_name=txtCust.getText().toUpperCase();
       
        try {
            jTableClient.setModel(new DefaultTableModel(null,new String[]{"CUSTOMER ID","CUST_NAME","CUST_IP","CUST_ADDRESS","CUST_CONTACT","RECHARGE DATE","AMOUNT","OPERATOR NAME "}));
            
            Class.forName("com.mysql.jdbc.Driver");
            con=DriverManager.getConnection(url,un,pass);
            
                  Statement st1=con.createStatement();
                    Statement st2=con.createStatement();
                    Statement st3=con.createStatement();
                  String query1="select client_id,client_name,client_ip,client_address,cust_contactno,"
                          + "recharge_date,amount,operator_name from (select * from client cl left outer join"
                          + " (select cust.cust_name,cust.cust_ip,cust.cust_contactno,op.operator_name from customer "
                          + "as cust join operator op on cust.operator_id=op.operator_id) cu on cl.client_ip=cu.cust_ip) res";
                  
                    String query2="select sum(amount) from (select * from client cl left outer join "
                            + "(select cust.cust_name,cust.cust_ip,cust.cust_contactno,op.operator_name "
                            + "from customer as cust join operator op on cust.operator_id=op.operator_id) "
                            + "cu on cl.client_ip=cu.cust_ip) res ";
                  String query3="select count(*) from (select * from client cl left outer join "
                          + "(select cust.cust_name,cust.cust_ip,cust.cust_contactno,op.operator_name "
                          + "from customer as cust join operator op on cust.operator_id=op.operator_id) cu "
                          + "on cl.client_ip=cu.cust_ip) res ";
                          
                  
                  if(name.length()!=0)
                  {
                      
                      query1=query1+" WHERE operator_name='"+name+"'";
                     query2=query2+"WHERE operator_name='"+name+"'";
                     query3=query3+"WHERE operator_name='"+name+"'";


                  }
                  if(amount.length()!= 0)
                  { if(name.length()==0)
                  { query1=query1+" WHERE amount='"+amount+"'";
                     query2=query2+"WHERE amount='"+amount+"'";
                     query3=query3+"WHERE amount='"+amount+"'";
                  }
                  else
                  { query1=query1+" AND amount='"+amount+"'";
                    query2=query2+"AND amount='"+amount+"'";
                    query3=query3+"AND amount='"+amount+"'";
                  }
                 
                  }
                  if(cust_name.length()!=0)
                  { cust_name="%"+cust_name+"%";
                      if(name.length()==0 && amount.length()==0)
                      {query1=query1+" WHERE client_name like'"+cust_name+"'";
                      query2=query2+"WHERE client_name like'"+cust_name+"'";
                      query3=query3+"WHERE client_name like'"+cust_name+"'";
                      }
                      
                      else
                  {query1=query1+" AND client_name like'"+cust_name+"'";
                  query2=query2+"AND client_name like'"+cust_name+"'";
                  query3=query3+"AND client_name like'"+cust_name+"'";
                  }
                  }
                  
                  query1=query1+";";
                  query2=query2+";";
                  query3=query3+";";
                  //System.out.print(query3);
        
        ResultSet rs1=st1.executeQuery(query1);
         ResultSet rs2=st2.executeQuery(query2);
          ResultSet rs3=st3.executeQuery(query3);
         rs2.next();
         rs3.next();
         txtSum.setText(rs2.getString(1));
         txtCount.setText(rs3.getString(1));

        DefaultTableModel model=(DefaultTableModel)jTableClient.getModel();
        while(rs1.next())
        {model.addRow(new String[]{rs1.getString(1),rs1.getString(2).toUpperCase(),rs1.getString(3),rs1.getString(4),rs1.getString(5), rs1.getString(6),rs1.getString(7),rs1.getString(8)});         
        }
        
        }     
        
        catch (ClassNotFoundException ex) {
            Logger.getLogger(View1.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(View1.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
       
            
        }
    }//GEN-LAST:event_txtAmountKeyPressed

    private void txtCustKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCustKeyPressed
        // TODO add your handling code here:
        
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        { Connection con;
        String name="";
       if(jComboBox1.getSelectedIndex() != -1)
       {name=jComboBox1.getSelectedItem().toString();
       }
       
    
        String amount= txtAmount.getText();
        String cust_name=txtCust.getText().toUpperCase();
       
        try {
            jTableClient.setModel(new DefaultTableModel(null,new String[]{"CUSTOMER ID","CUST_NAME","CUST_IP","CUST_ADDRESS","CUST_CONTACT","RECHARGE DATE","AMOUNT","OPERATOR NAME "}));
            
            Class.forName("com.mysql.jdbc.Driver");
            con=DriverManager.getConnection(url,un,pass);
            
                  Statement st1=con.createStatement();
                    Statement st2=con.createStatement();
                    Statement st3=con.createStatement();
                  String query1="select client_id,client_name,client_ip,client_address,cust_contactno,"
                          + "recharge_date,amount,operator_name from (select * from client cl left outer join"
                          + " (select cust.cust_name,cust.cust_ip,cust.cust_contactno,op.operator_name from customer "
                          + "as cust join operator op on cust.operator_id=op.operator_id) cu on cl.client_ip=cu.cust_ip) res";
                  
                    String query2="select sum(amount) from (select * from client cl left outer join "
                            + "(select cust.cust_name,cust.cust_ip,cust.cust_contactno,op.operator_name "
                            + "from customer as cust join operator op on cust.operator_id=op.operator_id) "
                            + "cu on cl.client_ip=cu.cust_ip) res ";
                  String query3="select count(*) from (select * from client cl left outer join "
                          + "(select cust.cust_name,cust.cust_ip,cust.cust_contactno,op.operator_name "
                          + "from customer as cust join operator op on cust.operator_id=op.operator_id) cu "
                          + "on cl.client_ip=cu.cust_ip) res ";
                          
                  
                  if(name.length()!=0)
                  {
                      
                      query1=query1+" WHERE operator_name='"+name+"'";
                     query2=query2+"WHERE operator_name='"+name+"'";
                     query3=query3+"WHERE operator_name='"+name+"'";


                  }
                  if(amount.length()!= 0)
                  { if(name.length()==0)
                  { query1=query1+" WHERE amount='"+amount+"'";
                     query2=query2+"WHERE amount='"+amount+"'";
                     query3=query3+"WHERE amount='"+amount+"'";
                  }
                  else
                  { query1=query1+" AND amount='"+amount+"'";
                    query2=query2+"AND amount='"+amount+"'";
                    query3=query3+"AND amount='"+amount+"'";
                  }
                 
                  }
                  if(cust_name.length()!=0)
                  { cust_name="%"+cust_name+"%";
                      if(name.length()==0 && amount.length()==0)
                      {query1=query1+" WHERE client_name like'"+cust_name+"'";
                      query2=query2+"WHERE client_name like'"+cust_name+"'";
                      query3=query3+"WHERE client_name like'"+cust_name+"'";
                      }
                      
                      else
                  {query1=query1+" AND client_name like'"+cust_name+"'";
                  query2=query2+"AND client_name like'"+cust_name+"'";
                  query3=query3+"AND client_name like'"+cust_name+"'";
                  }
                  }
                  
                  query1=query1+";";
                  query2=query2+";";
                  query3=query3+";";
                  //System.out.print(query3);
        
        ResultSet rs1=st1.executeQuery(query1);
         ResultSet rs2=st2.executeQuery(query2);
          ResultSet rs3=st3.executeQuery(query3);
         rs2.next();
         rs3.next();
         txtSum.setText(rs2.getString(1));
         txtCount.setText(rs3.getString(1));

        DefaultTableModel model=(DefaultTableModel)jTableClient.getModel();
        while(rs1.next())
        {model.addRow(new String[]{rs1.getString(1),rs1.getString(2).toUpperCase(),rs1.getString(3),rs1.getString(4),rs1.getString(5), rs1.getString(6),rs1.getString(7),rs1.getString(8)});         
        }
        
        }     
        
        catch (ClassNotFoundException ex) {
            Logger.getLogger(View1.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(View1.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
       
            
        }
    }//GEN-LAST:event_txtCustKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableClient;
    private javax.swing.JTextField txtAmount;
    private javax.swing.JTextField txtCount;
    private javax.swing.JTextField txtCust;
    private javax.swing.JTextField txtSum;
    // End of variables declaration//GEN-END:variables

   
}
